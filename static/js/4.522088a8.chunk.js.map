{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","DialogItem","path","id","dialog","active","to","path1","name","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","compose","connect","dispatch","sendMessageCreator"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,wBAAwB,QAAU,yBAAyB,IAAM,uB,oBCAhPD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qGCO9HC,EALC,SAACC,GAChB,OAAO,qBAAKC,UAAWC,IAAEC,QAAlB,SAA4BH,EAAMG,W,QCQ3BC,EARI,SAACJ,GACnB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACC,qBAAKL,UAAWC,IAAEK,OAAS,IAAML,IAAEM,OAAnC,SACC,eAAC,IAAD,CAASC,GAAIJ,EAAb,UAAqBL,EAAMU,MAA3B,IAAmCV,EAAMW,W,gCCHtCC,EAAcC,YAAiB,IAiBtBC,cAAU,CAAEC,KAAM,2BAAlBD,EAfQ,SAACd,GACvB,OACC,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACC,8BACC,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACjBC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBAAqBZ,KAAK,qBAExC,8BACC,kDC2BWa,EAnCC,SAACxB,GAEhB,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAiBL,GAAIwB,EAAExB,IAAZwB,EAAExB,OAC1EyB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS9B,QAAS8B,EAAE9B,SAAc8B,EAAE3B,OAC9DmB,EAAMS,eAgB3B,OACC,sBAAKjC,UAAWC,IAAE0B,QAAlB,UACC,qBAAK3B,UAAWC,IAAEiC,aAAlB,SACER,IAEF,qBAAK1B,UAAWC,IAAE8B,SAAlB,SACC,8BAAMD,MAGP,cAAC,EAAD,CAAgBf,SAfE,SAACoB,GACpBpC,EAAMqC,YAAYD,EAAOF,uB,oDCCZI,sBACdC,aAnBqB,SAACd,GACtB,MAAO,CACNC,YAAaD,EAAMC,gBAII,SAACc,GACzB,MAAO,CACNH,YAAa,SAACH,GACbM,EAASC,YAAmBP,SAShBI,CAGbd","file":"static/js/4.522088a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3wRKZ\",\"dialogItems\":\"Dialogs_dialogItems__36gDl\",\"active\":\"Dialogs_active__BWal8\",\"messages\":\"Dialogs_messages__3LdBp\",\"dialog\":\"Dialogs_dialog__xSk7y\",\"message\":\"Dialogs_message__1pVpe\",\"pct\":\"Dialogs_pct__2r-8L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItems\":\"Message_dialogItems__3TFiH\",\"active\":\"Message_active__k3Ccg\",\"messages\":\"Message_messages__g-74-\",\"message\":\"Message_message__1OEot\"};","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n\treturn <div className={s.message}>{props.message}</div>\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n\tlet path = '/dialogs/' + props.id;\r\n\treturn (\r\n\t\t<div className={s.dialog + ' ' + s.active}>\r\n\t\t\t<NavLink to={path} >{props.path1} {props.name}</NavLink></div>\r\n\t)\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field component={Textarea}\r\n\t\t\t\t\tvalidate={[required, maxLength50]}\r\n\t\t\t\t\tplaceholder='Enter your message' name=\"newMessageBody\" />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Send</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default reduxForm({ form: 'dialog-add-message-form' })(AddMessageForm);\r\n\r\n// export default reduxForm({ form: 'login' })(AddMessageForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport onSendMessageClick from './DialogsContainer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet state = props.dialogsPage;\r\n\r\n\tlet dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n\tlet messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\tlet newMessageBody = state.newMessageBody;\r\n\t/*\tlet newEl = React.createRef();\r\n\t\tlet onSendMessageClick = () => {\r\n\t\t\tprops.sendMessage();\r\n\t\t}\r\n\t\tlet onNewMessageChange = (e) => {  //обновление каждого нажатия\r\n\t\t\tlet body = e.target.value;\r\n\t\t\tprops.updateNewMessageBody(body);\r\n\t\t}*/\r\n\r\n\tlet addNewMessage = (values) => {\r\n\t\tprops.sendMessage(values.newMessageBody);\r\n\t}\r\n\r\n\t// if (!props.isAuth) return <Redirect to={\"/login\"} /> ;  //!! Loginization\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t<div>{messagesElements}</div>\r\n\r\n\t\t\t</div>\r\n\t\t\t<AddMessageForm onSubmit={addNewMessage} />\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Dialogs;\r\n\r\n\r\n// let maxLength50 = maxLengthCreator(50)\r\n\r\n// const AddMessageForm = (props) => {\r\n// \treturn (\r\n// \t\t<form onSubmit={props.handleSubmit}>\r\n// \t\t\t<div>\r\n// \t\t\t\t<Field component=\"textarea\" validate={[required, maxLength50]}\r\n// \t\t\t\t\tname=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n// \t\t\t</div>\r\n// \t\t\t<div><button>Add message</button></div>\r\n// \t\t</form>\r\n// \t)\r\n// }\r\n\r\n// const AddMessageFormRedux = reduxForm({ form: 'dialog-add-message-form' })(AddMessageForm)\r\n\r\n{/* <textarea ref={newEl}\r\n\tplaceholder=\"Enter your message\"\r\n\tvalue={newMessageBody} //прокидываем введенные Данные в state (FLUX)\r\n\tonChange={onNewMessageChange} /> \r\n\t\t\t\t\t</div >\r\n\t<div><button onClick={ }>Add message</button></div> */}\r\n\r\n","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => { //данные, которые берем из State\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t\t// isAuth: state.auth.isAuth\r\n\t}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {  //коллбэки, которые будем отправлять в презентационную компоненту\r\n\treturn {\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\tdispatch(sendMessageCreator(newMessageBody));\r\n\t\t},\r\n\r\n\t\t// updateNewMessageBody: (body) => {  \r\n\t\t// \tdispatch(updateNewMessageBodyCreator(body));\r\n\t\t// }\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\t//* withAuthRedirect  \r\n)(Dialogs)"],"sourceRoot":""}